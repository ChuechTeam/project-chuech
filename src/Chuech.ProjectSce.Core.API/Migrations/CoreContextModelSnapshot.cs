// <auto-generated />
using System;
using System.Text.Json;
using Chuech.ProjectSce.Core.API.Data;
using Chuech.ProjectSce.Core.API.Data.Resources;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Chuech.ProjectSce.Core.API.Migrations
{
    [DbContext(typeof(CoreContext))]
    partial class CoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasPostgresEnum(null, "educational_role", new[] { "teacher", "student", "none" })
                .HasPostgresEnum(null, "institution_role", new[] { "admin", "none" })
                .HasPostgresEnum(null, "resource_type", new[] { "document" })
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "6.0.0-preview.7.21378.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("creation_date");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("integer")
                        .HasColumnName("institution_id");

                    b.Property<DateTime>("LastEditDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_edit_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("UserCount")
                        .HasColumnType("integer")
                        .HasColumnName("user_count");

                    b.HasKey("Id")
                        .HasName("pk_groups");

                    b.HasIndex("InstitutionId")
                        .HasDatabaseName("ix_groups_institution_id");

                    b.HasIndex("Name", "InstitutionId")
                        .IsUnique()
                        .HasDatabaseName("ix_groups_name_institution_id");

                    b.ToTable("groups", (string)null);
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.Institution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AdminCount")
                        .HasColumnType("integer")
                        .HasColumnName("admin_count");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("creation_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_institutions");

                    b.ToTable("institutions", (string)null);
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.InstitutionMember", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("integer")
                        .HasColumnName("institution_id");

                    b.Property<EducationalRole>("EducationalRole")
                        .HasColumnType("educational_role")
                        .HasColumnName("educational_role");

                    b.Property<InstitutionRole>("InstitutionRole")
                        .HasColumnType("institution_role")
                        .HasColumnName("institution_role");

                    b.HasKey("UserId", "InstitutionId")
                        .HasName("pk_institution_members");

                    b.HasIndex("InstitutionId")
                        .HasDatabaseName("ix_institution_members_institution_id");

                    b.ToTable("institution_members", (string)null);
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.Invitation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("creation_date");

                    b.Property<int>("CreatorId")
                        .HasColumnType("integer")
                        .HasColumnName("creator_id");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("expiration_date");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("integer")
                        .HasColumnName("institution_id");

                    b.Property<int>("UsagesLeft")
                        .IsConcurrencyToken()
                        .HasColumnType("integer")
                        .HasColumnName("usages_left");

                    b.HasKey("Id")
                        .HasName("pk_invitations");

                    b.HasIndex("CreatorId")
                        .HasDatabaseName("ix_invitations_creator_id");

                    b.HasIndex("InstitutionId")
                        .HasDatabaseName("ix_invitations_institution_id");

                    b.HasIndex("Id", "ExpirationDate", "UsagesLeft")
                        .HasDatabaseName("ix_invitations_id_expiration_date_usages_left");

                    b.ToTable("invitations", (string)null);
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.OperationLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CompletionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("completion_date")
                        .HasDefaultValueSql("NOW() at time zone 'utc'");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("kind");

                    b.Property<JsonDocument>("ResultJson")
                        .HasColumnType("jsonb")
                        .HasColumnName("result_json");

                    b.HasKey("Id")
                        .HasName("pk_operation_logs");

                    b.HasIndex("Id", "Kind")
                        .IsUnique()
                        .HasDatabaseName("ix_operation_log_id_kind");

                    b.ToTable("operation_logs", (string)null);
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.Resources.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer")
                        .HasColumnName("author_id");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("creation_date");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("integer")
                        .HasColumnName("institution_id");

                    b.Property<DateTime>("LastEditDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_edit_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<ResourceType>("Type")
                        .HasColumnType("resource_type")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_resources");

                    b.HasIndex("AuthorId")
                        .HasDatabaseName("ix_resources_author_id");

                    b.HasIndex("InstitutionId")
                        .HasDatabaseName("ix_resources_institution_id");

                    b.ToTable("resources", (string)null);

                    b.HasDiscriminator<ResourceType>("Type");
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.Space", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("InstitutionId")
                        .HasColumnType("integer")
                        .HasColumnName("institution_id");

                    b.Property<int>("ManagerCount")
                        .HasColumnType("integer")
                        .HasColumnName("manager_count");

                    b.Property<int>("MemberCount")
                        .HasColumnType("integer")
                        .HasColumnName("member_count");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer")
                        .HasColumnName("subject_id");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Id")
                        .HasName("pk_spaces");

                    b.HasIndex("InstitutionId")
                        .HasDatabaseName("ix_spaces_institution_id");

                    b.HasIndex("SubjectId")
                        .HasDatabaseName("ix_spaces_subject_id");

                    b.ToTable("spaces", (string)null);
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.SpaceMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Category")
                        .HasColumnType("integer")
                        .HasColumnName("category");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("discriminator");

                    b.Property<int>("SpaceId")
                        .HasColumnType("integer")
                        .HasColumnName("space_id");

                    b.HasKey("Id")
                        .HasName("pk_space_members");

                    b.HasIndex("SpaceId")
                        .HasDatabaseName("ix_space_members_space_id");

                    b.ToTable("space_members", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("SpaceMember");
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Color")
                        .HasColumnType("integer")
                        .HasColumnName("color");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("integer")
                        .HasColumnName("institution_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_subjects");

                    b.HasIndex("InstitutionId")
                        .HasDatabaseName("ix_subjects_institution_id");

                    b.ToTable("subjects", (string)null);
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("display_name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.Property<int>("GroupsId")
                        .HasColumnType("integer")
                        .HasColumnName("groups_id");

                    b.Property<int>("UsersId")
                        .HasColumnType("integer")
                        .HasColumnName("users_id");

                    b.HasKey("GroupsId", "UsersId")
                        .HasName("pk_group_user");

                    b.HasIndex("UsersId")
                        .HasDatabaseName("ix_group_user_users_id");

                    b.ToTable("group_user", (string)null);
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.Resources.DocumentResource", b =>
                {
                    b.HasBaseType("Chuech.ProjectSce.Core.API.Data.Resources.Resource");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("file_size");

                    b.HasDiscriminator().HasValue(ResourceType.Document);
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.GroupSpaceMember", b =>
                {
                    b.HasBaseType("Chuech.ProjectSce.Core.API.Data.SpaceMember");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.HasIndex("GroupId")
                        .HasDatabaseName("ix_space_members_group_id");

                    b.HasIndex("SpaceId", "GroupId")
                        .IsUnique()
                        .HasDatabaseName("ix_space_members_space_id_group_id");

                    b.HasDiscriminator().HasValue("GroupSpaceMember");
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.UserSpaceMember", b =>
                {
                    b.HasBaseType("Chuech.ProjectSce.Core.API.Data.SpaceMember");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_space_members_user_id");

                    b.HasIndex("SpaceId", "UserId")
                        .IsUnique()
                        .HasDatabaseName("ix_space_members_space_id_user_id");

                    b.HasDiscriminator().HasValue("UserSpaceMember");
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.Group", b =>
                {
                    b.HasOne("Chuech.ProjectSce.Core.API.Data.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .HasConstraintName("fk_groups_institutions_institution_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.InstitutionMember", b =>
                {
                    b.HasOne("Chuech.ProjectSce.Core.API.Data.Institution", "Institution")
                        .WithMany("Members")
                        .HasForeignKey("InstitutionId")
                        .HasConstraintName("fk_institution_members_institutions_institution_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chuech.ProjectSce.Core.API.Data.User", "User")
                        .WithMany("InstitutionMembers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_institution_members_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.Invitation", b =>
                {
                    b.HasOne("Chuech.ProjectSce.Core.API.Data.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .HasConstraintName("fk_invitations_users_creator_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chuech.ProjectSce.Core.API.Data.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .HasConstraintName("fk_invitations_institutions_institution_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.Resources.Resource", b =>
                {
                    b.HasOne("Chuech.ProjectSce.Core.API.Data.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("fk_resources_users_author_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chuech.ProjectSce.Core.API.Data.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .HasConstraintName("fk_resources_institutions_institution_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.Space", b =>
                {
                    b.HasOne("Chuech.ProjectSce.Core.API.Data.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .HasConstraintName("fk_spaces_institutions_institution_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chuech.ProjectSce.Core.API.Data.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("fk_spaces_subjects_subject_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.SpaceMember", b =>
                {
                    b.HasOne("Chuech.ProjectSce.Core.API.Data.Space", "Space")
                        .WithMany("Members")
                        .HasForeignKey("SpaceId")
                        .HasConstraintName("fk_space_members_spaces_space_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Space");
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.Subject", b =>
                {
                    b.HasOne("Chuech.ProjectSce.Core.API.Data.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .HasConstraintName("fk_subjects_institutions_institution_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.HasOne("Chuech.ProjectSce.Core.API.Data.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupsId")
                        .HasConstraintName("fk_group_user_groups_groups_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chuech.ProjectSce.Core.API.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .HasConstraintName("fk_group_user_users_users_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.GroupSpaceMember", b =>
                {
                    b.HasOne("Chuech.ProjectSce.Core.API.Data.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .HasConstraintName("fk_space_members_groups_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.UserSpaceMember", b =>
                {
                    b.HasOne("Chuech.ProjectSce.Core.API.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_space_members_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.Institution", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.Space", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Data.User", b =>
                {
                    b.Navigation("InstitutionMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
