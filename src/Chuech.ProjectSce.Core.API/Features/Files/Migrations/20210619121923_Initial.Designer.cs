// <auto-generated />
using System;
using Chuech.ProjectSce.Core.API.Features.Files.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Chuech.ProjectSce.Core.API.Features.Files.Migrations
{
    [DbContext(typeof(FileStorageContext))]
    [Migration("20210619121923_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Features.Files.Data.FileAccessLink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("ExpirationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expiration_date");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.HasKey("Id")
                        .HasName("pk_file_access_links");

                    b.HasIndex("Id", "ExpirationDate")
                        .HasDatabaseName("ix_file_access_links_id_expiration_date")
                        .IncludeProperties(new[] { "FileName" });

                    b.ToTable("file_access_links");
                });

            modelBuilder.Entity("Chuech.ProjectSce.Core.API.Features.Files.Data.TrackedUserFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Category")
                        .HasColumnType("text")
                        .HasColumnName("category");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("file_size");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_tracked_user_files");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_tracked_user_files_user_id")
                        .IncludeProperties(new[] { "FileSize" });

                    b.HasIndex("UserId", "FileName", "Category")
                        .HasDatabaseName("ix_tracked_user_files_user_id_file_name_category");

                    b.ToTable("tracked_user_files");
                });
#pragma warning restore 612, 618
        }
    }
}
